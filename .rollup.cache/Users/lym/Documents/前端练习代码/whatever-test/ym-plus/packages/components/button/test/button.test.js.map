{"version":3,"file":"button.test.js","sourceRoot":"","sources":["button.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;QACpB,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;YAC5B,KAAK,EAAE;gBACL,IAAI,EAAE,SAAS;aAChB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;QACrB,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;YAC5B,KAAK,EAAE;gBACL,KAAK,EAAE,IAAI;aACZ;SACF,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAClD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE;QACxB,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;YAC5B,KAAK,EAAE;gBACL,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACnD,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;QACd,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;YAC5B,KAAK,EAAE;gBACL,OAAO,EAAE,MAAM;aAChB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;QACtB,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { describe, expect, it } from 'vitest';\nimport { mount } from '@vue/test-utils';\nimport Button from '../src/button.vue';\n\ndescribe(\"测试 button 组件\", () => {\n  it(\"渲染按钮有 default type\", () => {\n    const wrapper = mount(Button);\n    expect(wrapper.classes()).toContain(\"ym-button\");\n    expect(wrapper.classes()).toContain(\"ym-button-default\");\n  })\n\n  it(\"渲染按钮有正确的属性\", () => {\n    const wrapper = mount(Button, {\n      props: {\n        type: \"success\"\n      }\n    });\n    expect(wrapper.classes()).toContain(\"ym-button\");\n    expect(wrapper.classes()).toContain(\"ym-button-success\");\n  })\n\n  it(\"渲染 plain 按钮\", () => {\n    const wrapper = mount(Button, {\n      props: {\n        plain: true\n      }\n    });\n    expect(wrapper.classes()).toContain(\"is-plain\");\n  })\n\n  it(\"渲染 disabled 按钮\", () => {\n    const wrapper = mount(Button, {\n      props: {\n        disabled: true\n      }\n    });\n    expect(wrapper.classes()).toContain(\"is-disabled\");\n    expect(wrapper.attributes()).toHaveProperty(\"disabled\");\n  })\n\n  it(\"测试插槽\", () => {\n    const wrapper = mount(Button, {\n      slots: {\n        default: '插槽文本'\n      }\n    });\n    expect(wrapper.text()).toContain(\"插槽文本\");\n  })\n\n  it(\"测试点击事件\", async () => {\n    const wrapper = mount(Button);\n    await wrapper.trigger(\"click\");\n    expect(wrapper.emitted()).toHaveProperty(\"click\");\n  })\n})"]}